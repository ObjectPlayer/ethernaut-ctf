import { HardhatRuntimeEnvironment } from "hardhat/types";
import { DeployFunction } from "hardhat-deploy/types";
import { isLocalNetwork } from "../utils/network-config";

/**
 * Deploys the AlternateExploit contract for GatekeeperOne
 *
 * @param hre HardhatRuntimeEnvironment object
 */
const deployAlternateExploit: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
  const { deployments, getNamedAccounts, network } = hre;
  const { deploy } = deployments;
  const { deployer } = await getNamedAccounts();
  const chainId = network.config.chainId || 31337;

  console.log("Deploying AlternateExploit contract with account:", deployer);

  // Deploy the AlternateExploit contract
  const alternateExploit = await deploy("AlternateExploit", {
    from: deployer,
    args: [],
    log: true,
    autoMine: true,
    waitConfirmations: !isLocalNetwork(chainId) ? 3 : 0, // wait for confirmations on non-local networks
  });

  console.log(`AlternateExploit contract deployed at: ${alternateExploit.address}`);
  console.log("----------------------------------------------------");
};

export default deployAlternateExploit;

// Tags help to select which deploy script to run
deployAlternateExploit.tags = ["level-13", "alternate-exploit"];
